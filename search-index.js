var searchIndex = JSON.parse('{\
"cairo_vm":{"doc":"","t":[14,0,0,0,14,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,5,5,5,5,5,3,3,3,11,12,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,5,5,5,5,17,5,5,5,5,5,5,5,13,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,17,17,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,3,12,11,11,12,11,11,11,12,11,11,10,11,11,11,11,11,11,12,12,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,3,3,3,3,3,3,3,13,3,3,3,3,4,3,3,13,3,13,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,0,0,0,0,0,0,0,0,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,4,13,13,13,13,13,4,13,3,13,13,13,13,13,13,13,4,4,4,4,13,13,13,4,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,12,12,11,11,12,11,11,12,11,11,11,11,12,12,12,11,12,11,12,12,11,12,11,11,11,11,11,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,0,0,0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,0,0,0,0,0,0,0,0,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,0,0,13,3,4,13,3,13,3,13,3,13,3,13,3,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,3,3,3,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,0,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,11,11,11,11,11],"n":["any_box","cairo_run","hint_processor","math_utils","relocatable","serde","types","utils","vm","cairo_run","write_binary_memory","write_binary_trace","write_output","builtin_hint_processor","hint_processor_definition","hint_processor_utils","blake2s_hash","blake2s_utils","builtin_hint_processor_definition","cairo_keccak","dict_hint_utils","dict_manager","find_element_hint","hint_code","hint_utils","keccak_utils","math_utils","memcpy_hint_utils","memset_utils","pow_utils","secp","segments","set","sha256_utils","signature","skip_next_instruction","squash_dict_utils","uint256_utils","usort","IV","blake2s_compress","blake2s_add_uint256","blake2s_add_uint256_bigend","compute_blake2s","finalize_blake2s","BuiltinHintProcessor","HintFunc","HintProcessorData","add_hint","ap_tracking","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","code","execute_hint","extra_hints","from","from","from","ids_data","into","into","into","new","new_default","new_empty","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","keccak_hints","block_permutation","cairo_keccak_finalize","compare_bytes_in_word_nondet","compare_keccak_full_rate_in_bytes_nondet","keccak_write_args","u64_array_to_mayberelocatable_vec","DICT_ACCESS_SIZE","default_dict_new","dict_new","dict_read","dict_squash_copy_dict","dict_squash_update_ptr","dict_update","dict_write","DefaultDictionary","DictManager","DictTracker","Dictionary","SimpleDictionary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","current_ptr","data","default","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_dictionary_copy","get_tracker","get_tracker_mut","get_value","insert_value","into","into","into","new","new_default_dict","new_default_dict","new_dict","new_empty","new_with_initial","to_owned","to_owned","to_owned","trackers","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","default_value","dict","find_element","search_sorted_lower","get_address_from_var_name","get_integer_from_var_name","get_maybe_relocatable_from_var_name","get_ptr_from_var_name","get_reference_from_var_name","get_relocatable_from_var_name","insert_value_from_var_name","insert_value_into_ap","unsafe_keccak","unsafe_keccak_finalize","assert_250_bit","assert_le_felt","assert_le_felt_excluded_0","assert_le_felt_excluded_1","assert_le_felt_excluded_2","assert_lt_felt","assert_nn","assert_not_equal","assert_not_zero","is_le_felt","is_nn","is_nn_out_of_range","is_positive","signed_div_rem","split_felt","split_int","split_int_assert_range","sqrt","unsigned_div_rem","add_segment","enter_scope","exit_scope","memcpy_continue_copying","memcpy_enter_scope","memset_continue_loop","memset_enter_scope","pow","bigint_utils","ec_utils","field_utils","secp_utils","signature","bigint_to_uint256","nondet_bigint3","compute_doubling_slope","compute_slope","ec_double_assign_new_x","ec_double_assign_new_y","ec_mul_inner","ec_negate","fast_ec_add_assign_new_x","fast_ec_add_assign_new_y","is_zero_assign_scope_variables","is_zero_nondet","is_zero_pack","reduce","verify_zero","BASE_86","BETA","N0","N1","N2","P0","P1","P2","SECP_REM","pack","pack_from_relocatable","pack_from_var_name","split","div_mod_n_packed_divmod","div_mod_n_safe_div","get_point_from_x","relocate_segment","temporary_array","set_add","sha256_finalize","sha256_input","sha256_main","verify_ecdsa_signature","squash_dict","squash_dict_inner_assert_len_keys","squash_dict_inner_check_access_index","squash_dict_inner_continue_loop","squash_dict_inner_first_iteration","squash_dict_inner_len_assert","squash_dict_inner_next_key","squash_dict_inner_skip_loop","squash_dict_inner_used_accesses_assert","split_64","uint256_add","uint256_signed_nn","uint256_sqrt","uint256_unsigned_div_rem","usort_body","usort_enter_scope","verify_multiplicity_assert","verify_multiplicity_body","verify_usort","HintProcessor","HintReference","ap_tracking_data","borrow","borrow_mut","cairo_type","clone","clone_into","compile_hint","dereference","eq","equivalent","execute_hint","fmt","from","from","into","new","new_simple","offset1","offset2","to_owned","try_from","try_into","type_id","vzip","compute_addr_from_reference","felt_to_u32","felt_to_usize","get_integer_from_reference","get_maybe_relocatable_from_reference","get_ptr_from_reference","insert_value_from_reference","div_mod","ec_add","ec_double","ec_double_slope","isqrt","line_slope","safe_div","safe_div_bigint","safe_div_biguint","safe_div_usize","deserialize_program","deserialize_utils","ApTracking","Attribute","DebugInfo","FlowTrackingData","HintLocation","HintParams","Identifier","Immediate","InputFile","InstructionLocation","Location","Member","OffsetValue","ProgramJson","Reference","Reference","ReferenceManager","Value","ValueAddress","accessible_scopes","ap_tracking","ap_tracking_data","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtins","cairo_type","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","data","debug_info","default","dereference","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_array_of_bigint_hex","deserialize_felt_hex","deserialize_map_to_string_and_usize_hashmap","deserialize_program","deserialize_program_json","deserialize_value_address","end_col","end_line","end_pc","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","filename","flow_tracking_data","flow_tracking_data","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","full_name","get_location_marks","group","hints","hints","identifiers","input_file","inst","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","location","members","n_prefix_newlines","name","new","no_hint_reference_default","offset","offset","offset1","offset2","parent_location","pc","pc","prime","reference_ids","reference_manager","references","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","start_col","start_line","start_pc","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_with_content","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value_address","value_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FeltError","IntError","InvalidStringError","ReferenceParseError","borrow","borrow_mut","eq","equivalent","fmt","fmt","from","into","maybe_add_padding","parse_value","to_string","try_from","try_into","type_id","vzip","errors","exec_scope","instance_definitions","instruction","layout","program","relocatable","program_errors","ConstWithoutValue","EntrypointNotFound","IO","Parse","PrimeDiffers","ProgramError","borrow","borrow_mut","fmt","fmt","from","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","ExecutionScopes","assign_or_update_variable","borrow","borrow_mut","data","default","delete_variable","enter_scope","exit_scope","from","get","get_any_boxed_mut","get_any_boxed_ref","get_dict_manager","get_list","get_list_ref","get_local_variables","get_local_variables_mut","get_mut_dict_ref","get_mut_list_ref","get_mut_ref","get_ref","insert_box","insert_value","into","new","try_from","try_into","type_id","vzip","bitwise_instance_def","builtins_instance_def","cpu_instance_def","diluted_pool_instance_def","ec_op_instance_def","ecdsa_instance_def","keccak_instance_def","pedersen_instance_def","range_check_instance_def","AP","AP","APPlus2","Add","Add","Add1","Add2","ApUpdate","AssertEq","Call","Dst","FP","FP","FpUpdate","Imm","Instruction","Jnz","Jump","JumpRel","Mul","NOp","Op0","Op1","Op1Addr","Opcode","PcUpdate","Register","Regular","Regular","Regular","Res","Ret","Unconstrained","ap_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deserialize","dst_register","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fp_update","from","from","from","from","from","from","from","from","imm","into","into","into","into","into","into","into","into","off0","off1","off2","op0_register","op1_addr","opcode","pc_update","res","serialize","size","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Program","borrow","borrow_mut","builtins","clone","clone_into","constants","data","default","deserialize","end","eq","equivalent","error_message_attributes","fmt","from","from_file","from_reader","hints","identifiers","instruction_locations","into","main","new","prime","reference_manager","serialize","start","to_owned","try_from","try_into","type_id","vzip","Int","MaybeRelocatable","Relocatable","RelocatableValue","add","add","add","add","add","add_int","add_int","add_maybe","add_usize","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","divmod","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_int_ref","get_relocatable","hash","hash","into","into","offset","partial_cmp","partial_cmp","relocate_address","relocate_value","segment_index","serialize","serialize","sub","sub","sub_usize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","vzip","vzip","from_relocatable_to_indexes","is_subsequence","to_field_element","context","decoding","errors","runners","security","trace","vm_core","vm_memory","run_context","RunContext","borrow","borrow_mut","compute_dst_addr","compute_op0_addr","compute_op1_addr","from","get_ap","get_fp","get_pc","into","try_from","try_into","type_id","vzip","decoder","decode_instruction","cairo_run_errors","exec_scope_errors","hint_errors","memory_errors","runner_errors","trace_errors","vm_errors","vm_exception","CairoRunError","MemoryError","Program","Runner","Trace","VirtualMachine","VmException","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","ExecScopeError","ExitMainScopeError","NoScopeError","borrow","borrow_mut","eq","equivalent","fmt","fmt","from","hash","into","provide","to_string","try_from","try_into","type_id","vzip","ArcTooBig","AssertLtFelt","AssertNNValueOutOfRange","AssertNotEqualFail","AssertNotZero","AssertionFailed","BigIntToBigUintFail","BigintToU32Fail","BigintToUsizeFail","CantCreateDictionaryOnTakenSegment","CouldntPopPositions","CurrentAccessIndicesNotEmpty","CustomHint","EmptyAccessIndices","EmptyCurrentAccessIndices","EmptyKeys","ExcludedNot2","FailedToGetConstant","FailedToGetIds","FindElemMaxSize","FixedSizeArrayFail","FromScopeError","HintError","Internal","InvalidApValue","InvalidBlockSize","InvalidIndex","InvalidKeccakInputLength","InvalidKeccakStateSizeFelts","InvalidSetRange","InvalidTrackingGroup","InvalidWordSize","KeccakMaxSize","KeyNotFound","KeysNotEmpty","LastPosNotFound","MismatchedDictPtr","MissingConstant","NAccessesTooBig","NoDictTracker","NoInitialDict","NoKeyInAccessIndices","NoRegisterInReference","NoValueForKey","NoValueForKeyFindElement","NonLeFelt","NoneApTrackingData","NumUsedAccessesAssertFail","OutOfValidRange","PositionsLengthNotZero","PositionsNotFound","PtrDiffNotDivisibleByDictAccessSize","ScopeError","SecpSplitNegative","SecpSplitOutOfRange","SecpVerifyZero","SplitIntLimbOutOfRange","SplitIntNotZero","SquashDictMaxSizeExceeded","UnexpectedPositionsDictFail","UnknownHint","UsortOutOfRange","ValueOutOfRange","ValueOutside250BitRange","ValueOutsideValidRange","VariableNotInScopeError","WrongHintData","WrongPrevValue","borrow","borrow_mut","eq","fmt","fmt","from","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","AddressInTemporarySegment","AddressNotInTemporarySegment","AddressNotRelocatable","CantGetMutAccessedOffset","DuplicatedRelocation","EffectiveSizesNotCalled","ErrorCalculatingMemoryUnits","ErrorParsingPubKey","ErrorRetrievingMessage","ErrorVerifyingSignature","FoundNonInt","GetRangeMemoryGap","InconsistentMemory","InitializingVerifyingKey","InsufficientAllocatedCells","InvalidMemoryValue","InvalidSignature","MemoryError","MissingAccessedAddresses","MissingMemoryCells","MissingMemoryCellsWithOffsets","MissingSegmentUsedSizes","NonZeroOffset","NumOutOfBounds","Relocation","SegmentNotFinalized","SignatureNotFound","TemporarySegmentInRelocation","UnallocatedSegment","WriteArg","borrow","borrow_mut","eq","equivalent","fmt","fmt","from","into","provide","to_string","try_from","try_into","type_id","vzip","BaseNotFinished","BuiltinNotIncluded","BuiltinSegmentNameCollision","CouldntParsePrime","DisorderedBuiltins","EcOpBuiltinScalarLimit","EcOpSameXCoordinate","ExpectedInteger","FailedAddingReturnValues","FailedMemoryGet","FailedStringConversion","FinalStack","FinalizeNoEndRun","FinalizeSegements","FinalizeSegmentsNoProofMode","FoundNonInt","IntegerBiggerThanPowerOfTwo","InvalidLayoutName","InvalidStopPointer","MaybeRelocVecToU64ArrayError","MemoryError","MemoryGet","MemoryInitializationError","MemoryValidationError","MissingBuiltin","MissingMain","NegBuiltinBase","NoAP","NoBuiltinForInstance","NoExecBase","NoExecBaseForEntrypoint","NoExecPublicMemory","NoFP","NoPC","NoProgBase","NoProgramEnd","NoProgramStart","NonRelocatableAddress","PointNotOnCurve","ReadReturnValuesNoEndRun","RunAlreadyFinished","RunnerError","RunnerInTemporarySegment","SafeDivFailUsize","SliceToArrayError","UninitializedBase","WriteFail","borrow","borrow_mut","eq","equivalent","fmt","fmt","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","AlreadyRelocated","MemoryError","NoRelocationFound","RegNotRelocatable","TraceError","TraceNotEnabled","borrow","borrow_mut","eq","equivalent","fmt","fmt","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","BigintToU32Fail","BigintToU64Fail","BigintToUsizeFail","CantSubOffset","CantWriteReturnFp","CantWriteReturnPc","CompileHintFail","CouldntParsePrime","DiffAssertValues","DiffIndexComp","DiffIndexSub","DiffTypeComparison","DividedByZero","EndOfProgram","ErrorMessageAttribute","ExpectedIntAtRange","ExpectedInteger","ExpectedRelocatable","FailedToComputeOperands","FailedToGetSqrt","Hint","ImmShouldBe1","InconsistentAutoDeduction","InvalidApUpdate","InvalidArgCount","InvalidHintEncoding","InvalidInstructionEncoding","InvalidMemoryValueTemporaryAddress","InvalidOp1Reg","InvalidOpcode","InvalidPcUpdate","InvalidRes","MainScopeError","MemoryError","MemoryGet","NegBuiltinBase","NoDst","NoImm","NoRangeCheckBuiltin","NoSignatureBuiltin","NoneInMemoryRange","NotImplemented","OffsetExceeded","OutOfBoundsBuiltinSegmentAccess","OutOfBoundsProgramSegmentAccess","OutOfValidRange","PureValue","RelocatableAdd","RunNotFinished","RunnerError","SafeDivFail","SafeDivFailBigInt","SafeDivFailBigUint","SafeDivFailU32","SafeDivFailUsize","SliceToArrayError","SqrtNegative","TracerError","UnconstrainedResAdd","UnconstrainedResAssertEq","UnconstrainedResJump","UnconstrainedResJumpRel","Unexpected","UnknownOp0","UsizeToU32Fail","ValueNotPositive","VirtualMachineError","borrow","borrow_mut","eq","fmt","fmt","from","from","from","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","VmException","borrow","borrow_mut","eq","fmt","fmt","from","from_vm_error","get_error_attr_value","get_location","get_traceback","into","provide","to_string","try_from","try_into","type_id","vzip","builtin_runner","cairo_runner","Bitwise","BitwiseBuiltinRunner","BuiltinRunner","EcOp","EcOpBuiltinRunner","Hash","HashBuiltinRunner","Keccak","KeccakBuiltinRunner","Output","OutputBuiltinRunner","RangeCheck","RangeCheckBuiltinRunner","Signature","SignatureBuiltinRunner","_bound","add_signature","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","as_any","base","base","base","base","base","base","base","base","base","base","base","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","default","final_stack","final_stack","final_stack","final_stack","final_stack","final_stack","final_stack","final_stack","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_ec_op_error","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_memory_accesses","get_memory_accesses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_range_check_usage","get_range_check_usage","get_used_cells","get_used_cells","get_used_cells","get_used_cells","get_used_cells","get_used_cells","get_used_cells","get_used_cells","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_diluted_check_units","get_used_diluted_check_units","get_used_diluted_check_units","get_used_instances","get_used_instances","get_used_instances","get_used_instances","get_used_instances","get_used_instances","get_used_instances","get_used_instances","get_used_perm_range_check_units","get_used_perm_range_check_units","initial_stack","initial_stack","initial_stack","initial_stack","initial_stack","initial_stack","initial_stack","initial_stack","initialize_segments","initialize_segments","initialize_segments","initialize_segments","initialize_segments","initialize_segments","initialize_segments","initialize_segments","into","into","into","into","into","into","into","into","name","new","new","new","ratio","ratio","ratio","ratio","ratio","ratio","ratio","run_security_checks","set_stop_ptr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Array","CairoArg","CairoRunner","ExecutionResources","SegmentInfo","Single","add_additional_hash_builtin","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin_instance_counter","check_diluted_check_usage","check_memory_usage","check_range_check_usage","check_used_cells","clone","clone","clone","clone_into","clone_into","clone_into","default","end_run","eq","eq","eq","equivalent","equivalent","equivalent","exec_scopes","finalize_segments","fmt","fmt","fmt","from","from","from","from","from","from","get_builtin_segments_info","get_constants","get_execution_resources","get_hint_data_dictionary","get_initial_fp","get_memory_holes","get_output","get_perm_range_check_limits","get_program_builtins","get_reference_list","index","initialize","initialize_builtins","initialize_function_entrypoint","initialize_function_runner","initialize_segments","initialize_vm","into","into","into","into","n_memory_holes","n_steps","new","original_steps","read_return_values","relocate","relocated_memory","relocated_trace","run_for_steps","run_from_entrypoint","run_until_next_power_of_2","run_until_pc","run_until_steps","set_entrypoint","size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_output","verify_secure_runner","get_perm_range_check_limits","trace_entry","RelocatedTraceEntry","TraceEntry","ap","ap","borrow","borrow","borrow_mut","borrow_mut","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fp","fp","from","from","into","into","pc","pc","relocate_trace_register","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DeducedOperands","HintData","Operands","OperandsAddresses","VirtualMachine","add_memory_segment","add_relocation_rule","add_temporary_segment","ap_tracking_data","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_effective_sizes","compute_operands","default","disable_trace","end_run","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","gen_arg","get_ap","get_builtin_runners","get_builtin_runners_as_mut","get_continuous_range","get_fp","get_integer","get_integer_range","get_maybe","get_pc","get_range","get_range_check_builtin","get_relocatable","get_return_values","get_segment_used_size","get_signature_builtin","hint_code","ids","insert_value","into","into","into","into","into","load_data","mark_address_range_as_accessed","new","new","step","step_hint","step_instruction","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify_auto_deductions","verify_auto_deductions_for_addr","vzip","vzip","vzip","vzip","vzip","write_arg","memory","memory_segments","Memory","ValidationRule","add_validation_rule","borrow","borrow","borrow_mut","borrow_mut","data","default","from","from","get_continuous_range","get_integer","get_integer_range","get_range","get_relocatable","insert","insert_value","into","into","new","relocate_memory","temp_data","try_from","try_from","try_into","try_into","type_id","type_id","validate_existing_memory","validated_addresses","vzip","vzip","MemorySegmentManager","add","add_temporary_segment","borrow","borrow_mut","compute_effective_sizes","default","eq","equivalent","fmt","from","gen_arg","gen_cairo_arg","get_memory_holes","get_segment_size","get_segment_used_size","into","is_valid_memory_value","load_data","new","num_segments","num_temp_segments","public_memory_offsets","relocate_segments","segment_sizes","segment_used_sizes","try_from","try_into","type_id","vzip","write_arg"],"q":["cairo_vm","","","","","","","","","cairo_vm::cairo_run","","","","cairo_vm::hint_processor","","","cairo_vm::hint_processor::builtin_hint_processor","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::hint_processor::builtin_hint_processor::blake2s_hash","","cairo_vm::hint_processor::builtin_hint_processor::blake2s_utils","","","","cairo_vm::hint_processor::builtin_hint_processor::builtin_hint_processor_definition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::hint_processor::builtin_hint_processor::cairo_keccak","cairo_vm::hint_processor::builtin_hint_processor::cairo_keccak::keccak_hints","","","","","","cairo_vm::hint_processor::builtin_hint_processor::dict_hint_utils","","","","","","","","cairo_vm::hint_processor::builtin_hint_processor::dict_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::hint_processor::builtin_hint_processor::dict_manager::Dictionary","","cairo_vm::hint_processor::builtin_hint_processor::find_element_hint","","cairo_vm::hint_processor::builtin_hint_processor::hint_utils","","","","","","","","cairo_vm::hint_processor::builtin_hint_processor::keccak_utils","","cairo_vm::hint_processor::builtin_hint_processor::math_utils","","","","","","","","","","","","","","","","","","","cairo_vm::hint_processor::builtin_hint_processor::memcpy_hint_utils","","","","","cairo_vm::hint_processor::builtin_hint_processor::memset_utils","","cairo_vm::hint_processor::builtin_hint_processor::pow_utils","cairo_vm::hint_processor::builtin_hint_processor::secp","","","","","cairo_vm::hint_processor::builtin_hint_processor::secp::bigint_utils","","cairo_vm::hint_processor::builtin_hint_processor::secp::ec_utils","","","","","","","","cairo_vm::hint_processor::builtin_hint_processor::secp::field_utils","","","","","cairo_vm::hint_processor::builtin_hint_processor::secp::secp_utils","","","","","","","","","","","","","cairo_vm::hint_processor::builtin_hint_processor::secp::signature","","","cairo_vm::hint_processor::builtin_hint_processor::segments","","cairo_vm::hint_processor::builtin_hint_processor::set","cairo_vm::hint_processor::builtin_hint_processor::sha256_utils","","","cairo_vm::hint_processor::builtin_hint_processor::signature","cairo_vm::hint_processor::builtin_hint_processor::squash_dict_utils","","","","","","","","","cairo_vm::hint_processor::builtin_hint_processor::uint256_utils","","","","","cairo_vm::hint_processor::builtin_hint_processor::usort","","","","","cairo_vm::hint_processor::hint_processor_definition","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::hint_processor::hint_processor_utils","","","","","","","cairo_vm::math_utils","","","","","","","","","","cairo_vm::serde","","cairo_vm::serde::deserialize_programcairo_vm::serde::deserialize_utils","","","","","","","","","","","","","","","","","","","cairo_vm::types","","","","","","","cairo_vm::types::errors","cairo_vm::types::errors::program_errors","","","","","","","","","","","","","","","","","","","","","cairo_vm::types::exec_scope","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::types::instance_definitions","","","","","","","","","cairo_vm::types::instruction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::types::program","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::types::relocatable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::utils","","","cairo_vm::vm","","","","","","","","cairo_vm::vm::context","cairo_vm::vm::context::run_context","","","","","","","","","","","","","","","cairo_vm::vm::decoding","cairo_vm::vm::decoding::decoder","cairo_vm::vm::errors","","","","","","","","cairo_vm::vm::errors::cairo_run_errors","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::vm::errors::exec_scope_errors","","","","","","","","","","","","","","","","","","cairo_vm::vm::errors::hint_errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::vm::errors::memory_errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::vm::errors::runner_errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::vm::errors::trace_errors","","","","","","","","","","","","","","","","","","","","","","cairo_vm::vm::errors::vm_errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::vm::errors::vm_exception","","","","","","","","","","","","","","","","","","cairo_vm::vm::runners","","cairo_vm::vm::runners::builtin_runnercairo_vm::vm::runners::cairo_runner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::vm::security","cairo_vm::vm::trace","","cairo_vm::vm::trace::trace_entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::vm::vm_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::vm::vm_memory","","cairo_vm::vm::vm_memory::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_vm::vm::vm_memory::memory_segments","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Writes a trace as a binary file. Bincode encodes to little …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manages dictionaries in a Cairo program. Uses the segment …","Tracks the python dict associated with a Cairo dict.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Computes the memory address of the ids variable indicated …","Tries to convert a Felt value to u32","","Returns the Integer value stored in the given ids variable","","Returns the Relocatable value stored in the given ids …","Inserts value into the address of the given ids variable","Finds a nonnegative integer x &lt; p such that (m * x) % p == …","","Doubles a point on an elliptic curve with the equation y^2 …","Computes the slope of an elliptic curve with the equation …","Returns the integer square root of the nonnegative integer …","Computes the slope of the line connecting the two given EC …","Performs integer division between x and y; fails if x is …","Performs integer division between x and y; fails if x is …","Performs integer division between x and y; fails if x is …","Performs integer division between x and y; fails if x is …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prints the location with the passed message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Creates or updates an existing variable given its name and …","","","","","Removes a variable from the current scope given its name","","","Returns the argument unchanged.","Returns the value in the current execution scope that …","Returns the value in the current execution scope that …","Returns the value in the current execution scope that …","Returns the value in the dict manager","Returns the value in the current execution scope that …","Returns a reference to the value in the current execution …","Returns a dictionary containing the variables present in …","Returns a mutable reference to the dictionary containing …","Returns a mutable reference to the value in the current …","Returns a mutable reference to the value in the current …","Returns a mutable reference to the value in the current …","Returns a reference to the value in the current execution …","Inserts the boxed value into the current scope","Inserts the value into the current scope","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Adds a MaybeRelocatable to self Cant add two relocatable …","Adds a Felt to self","Adds a Felt to self","Adds a MaybeRelocatable to self Cant add two relocatable …","Adds a usize to self","","","","","","","","","","","Performs integer division and module on a …","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Turns a MaybeRelocatable into a Felt value. If the value …","","","","","Substracts two MaybeRelocatable values and returns the …","","","","","","","","","","","","","","","","","","Converts val to an integer in the range (-prime/2, …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Decodes an instruction. The encoding is little endian, so …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the builtin’s base","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the builtin’s allocated memory units","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of range check units used by the …","Returns the number of range check units used by the …","","","","","","","","","","","","","","","","Creates the necessary segments for the builtin in the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add (or replace if already present) a custom hash builtin. …","","","","","","","","","","Check if there are enough trace cells to fill the entire …","","Checks that there are enough trace cells to fill the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Gets the data used by the HintProcessor to execute each …","","Count the number of holes present in the segments.","","","","","","","","","","Creates the necessary segments for the program, execution, …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Execute an exact number of steps on the program from the …","","Execute steps until the step counter reaches a power of …","","Execute steps until a number of steps since the start of …","Overrides the previous entrypoint with a custom one, or “…","","","","","","","","","","","","","","","","","","","","","Writes the values hosted in the output builtin’s segment.","Verify that the completed run in a runner is safe to be …","Return the minimum and maximum values in the …","","","A trace entry for every instruction that was executed. …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Adds a new segment and to the VirtualMachine.memory …","Add a new relocation rule.","","","","","","","","","","","","","","","","","Proxy to MemorySegmentManager::compute_effective_sizes() …","Compute operands and result, trying to deduce them if …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns a reference to the vector with all builtins …","","Gets n elements from memory starting from addr (n being …","","Gets the integer value corresponding to the Relocatable …","Gets n integer values from memory starting from addr (n …","Gets a MaybeRelocatable value from memory indicated by a …","","Gets n elements from memory starting from addr (n being …","","Gets the relocatable value corresponding to the …","Gets <code>n_ret</code> return values from memory","","","","","Inserts a value into a memory address given by a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Writes data into the memory at address ptr and returns the …","","","","","","","","","","","","","","","","","","","","","","","","Makes sure that all assigned memory cells are consistent …","","","","","","","Writes args into the memory at address ptr and returns the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Inserts an MaybeRelocatable value into an address given by …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Relocates the memory according to the relocation rules and …","","","","","","","","Applies validation_rules to the current memory","","","","","Adds a new segment and returns its starting location as a …","Adds a new temporary segment and returns its starting …","","","Calculates the size (number of non-none elements) of each …","","","","","Returns the argument unchanged.","","","","","Returns the number of used segments when they are already …","Calls <code>U::from(self)</code>.","","Writes data into the memory at address ptr and returns the …","","","","","Returns a vector that contains the first relocated address …","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,[[1,2,3,3,2,3,[4,[3]],5],[[8,[6,7]]]],[1,9],[1,9],[[6,10],[[8,[7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[11,11,11,11],[[12,[11]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],0,0,0,[[16,17,[19,[18]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[16,10,20,21,13],[[8,[15]]]],0,[[]],[[]],[[]],0,[[]],[[]],[[]],[[[13,[17,[19,[18]]]]],16],[[17,[13,[17,22]]],23],[[],16],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[],24],[[]],[[]],[[]],0,[[10,13,14,13],[[8,[15]]]],[[10,13,14,13],[[8,[15]]]],[[10,13,14,13],[[8,[15]]]],[[10,13,14,13],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[],[[12,[25]]]],0,[[10,20,13,14],[[8,[15]]]],[[10,20],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[27,27],[28,28],[[]],[[]],[[]],0,0,[[],26],[[26,26],3],[[27,27],3],[[28,28],3],[[],3],[[],3],[[],3],[[26,29],30],[[27,29],30],[[28,29],30],[[]],[[]],[[]],[27,[[13,[25,25]]]],[[26,31],[[8,[27,15]]]],[[26,31],[[8,[27,15]]]],[[27,25],[[8,[25,15]]]],[[27,25,25]],[[]],[[]],[[]],[[],26],[[26,10,25,[4,[[13,[25,25]]]]],[[8,[25,15]]]],[[31,25,[4,[[13,[25,25]]]]],27],[[26,10,[13,[25,25]]],[[8,[25,15]]]],[31,27],[[31,[13,[25,25]]],27],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[],24],[[]],[[]],[[]],0,0,[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[2,10,13,14],[[8,[25,15]]]],[[2,10,13,14],[[8,[[33,[32]],15]]]],[[2,10,13,14],[[8,[25,15]]]],[[2,10,13,14],[[8,[31,15]]]],[[2,13],[[8,[22,15]]]],[[2,10,13,14],[[8,[31,15]]]],[[2,[34,[25]],10,13,14],[[8,[15]]]],[[10,[34,[25]]],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,20,13,14,13],[[8,[15]]]],[[10,20],[[8,[15]]]],[[10,20],[[8,[15]]]],[20,[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[10,[[8,[15]]]],[20,[[8,[15]]]],[20,[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],0,0,0,0,0,[[10,13,14,13],[[8,[15]]]],[[10,20,13,14,13],[[8,[15]]]],[[10,20,13,14,13],[[8,[15]]]],[[10,20,13,14,13],[[8,[15]]]],[[10,20,13,14,13],[[8,[15]]]],[[20,13],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,20,13,14,13],[[8,[15]]]],[[10,20,13,14,13],[[8,[15]]]],[[20,13],[[8,[15]]]],[[20,13],[[8,[15]]]],[[10,20],[[8,[15]]]],[[10,20,13,14,13],[[8,[15]]]],[[10,20,13,14,13],[[8,[15]]]],[[10,13,14,13],[[8,[15]]]],0,0,0,0,0,0,0,0,0,[[32,32,32],35],[[31,10],[[8,[35,15]]]],[[2,10,13,14],[[8,[35,15]]]],[[36,13],[[8,[15]]]],[[10,20,13,14,13],[[8,[15]]]],[[20,13],[[8,[15]]]],[[10,20,13,14,13],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[20,[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[20,[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[20,[[8,[15]]]],[20,[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],[[10,20,13,14],[[8,[15]]]],0,0,0,[[]],[[]],0,[22,22],[[]],[[2,14,13,13],[[8,[[21,[37]],38]]]],0,[[22,22],3],[[],3],[[10,20,21,13],[[8,[15]]]],[[22,29],30],[[]],[39,22],[[]],[[40,40,3,3],22],[40,22],0,0,[[]],[[],8],[[],8],[[],24],[[]],[[22,10,14],[[8,[31,15]]]],[32,[[8,[11,38]]]],[32,[[8,[41,38]]]],[[10,22,14],[[8,[[33,[32]],15]]]],[[10,22,14],[[8,[25,15]]]],[[10,22,14],[[8,[31,15]]]],[[[34,[25]],10,22,14],[[8,[15]]]],[[35,35,35],35],[35],[[35,35]],[[35,35],35],[36,[[8,[36,38]]]],[35,35],[[32,32],[[8,[32,38]]]],[[35,35],[[8,[35,38]]]],[[36,36],[[8,[36,38]]]],[[41,41],[[8,[41,38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[42,42],[43,43],[14,14],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[39,39],[52,52],[53,53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],14],0,[[],[[8,[54]]]],[[],[[8,[42]]]],[[],[[8,[43]]]],[[],[[8,[14]]]],[[],[[8,[44]]]],[[],[[8,[45]]]],[[],[[8,[46]]]],[[],[[8,[47]]]],[[],[[8,[55]]]],[[],[[8,[48]]]],[[],[[8,[49]]]],[[],[[8,[50]]]],[[],[[8,[51]]]],[[],[[8,[39]]]],[[],[[8,[52]]]],[[],[[8,[53]]]],[56,[[8,[[12,[25]]]]]],[56,[[8,[32]]]],[56,[[8,[[13,[17,41]]]]]],[[57,[4,[2]]],[[8,[58,59]]]],[57,[[8,[54,59]]]],[56,[[8,[53]]]],0,0,0,[[42,42],3],[[43,43],3],[[14,14],3],[[44,44],3],[[45,45],3],[[46,46],3],[[47,47],3],[[55,55],3],[[48,48],3],[[49,49],3],[[50,50],3],[[51,51],3],[[39,39],3],[[52,52],3],[[53,53],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,[[54,29],30],[[42,29],30],[[43,29],30],[[14,29],30],[[44,29],30],[[45,29],30],[[46,29],30],[[47,29],30],[[55,29],30],[[48,29],30],[[49,29],30],[[50,29],30],[[51,29],30],[[39,29],30],[[52,29],30],[[53,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[47,17],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],14],[[],53],0,0,0,0,0,0,0,0,0,0,0,[42,8],[43,8],[14,8],[44,8],[45,8],[46,8],[47,8],[48,8],[49,8],[50,8],[51,8],[39,8],[52,8],[53,8],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[47,17],17],[[47,17],17],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[60,60],3],[[],3],[[60,29],30],[[60,29],30],[[]],[[]],[17,17],[2,[[61,[2,53]]]],[[],17],[[],8],[[],8],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[59,29],30],[[59,29],30],[[]],[62,59],[63,59],[[]],[64],[59,[[4,[65]]]],[[],17],[[],8],[[],8],[[],24],[[]],0,[[20,2,[21,[37]]]],[[]],[[]],0,[[],20],[[20,2]],[[20,[13,[17,[21,[37]]]]]],[20,[[8,[66]]]],[[]],[[20,2],[[8,[[0,[37,67]],15]]]],[[20,2],[[8,[21,15]]]],[[20,2],[[8,[21,15]]]],[20,[[8,[[19,[[68,[26]]]],15]]]],[[20,2],[[8,[[12,[[0,[37,67]]]],15]]]],[[20,2],[[8,[12,15]]]],[20,[[8,[13,15]]]],[20,[[8,[13,15]]]],[[20,2],[[8,[13,15]]]],[[20,2],[[8,[12,15]]]],[[20,2],[[8,[15]]]],[[20,2],[[8,[15]]]],[[20,2,[21,[37]]]],[[20,2]],[[]],[[],20],[[],8],[[],8],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,69],[[]],[[],[[8,[69]]]],0,[[69,69],3],[[70,70],3],[[71,71],3],[[72,72],3],[[73,73],3],[[74,74],3],[[75,75],3],[[76,76],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[69,29],30],[[70,29],30],[[71,29],30],[[72,29],30],[[73,29],30],[[74,29],30],[[75,29],30],[[76,29],30],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[69,8],[70,41],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[58,58],[[]],0,0,[[],58],[[],[[8,[58]]]],0,[[58,58],3],[[],3],0,[[58,29],30],[[]],[[1,[4,[2]]],[[8,[58,59]]]],[[57,[4,[2]]],[[8,[58,59]]]],0,0,0,[[]],0,[[[12,[17]],17,[12,[25]],[4,[41]],[13,[41,[12,[42]]]],51,[13,[17,44]],[12,[46]],[4,[[13,[41,48]]]]],[[8,[58,59]]]],0,0,[58,8],0,[[]],[[],8],[[],8],[[],24],[[]],0,0,0,0,[[31,41]],[[31,41],31],[[31,40],31],[[31,40],31],[[25,25],[[8,[25,38]]]],[[31,32],[[8,[31,38]]]],[[25,32],[[8,[25,38]]]],[[31,25],[[8,[31,38]]]],[[25,41],25],[[]],[[]],[[]],[[]],[31,31],[25,25],[[]],[[]],[[],[[8,[31]]]],[[],[[8,[25]]]],[[25,25],[[8,[38]]]],[[31,31],3],[[25,25],3],[[],3],[[],3],[[31,29],30],[[31,29],30],[[25,29],30],[[25,29],30],[[],31],[[]],[31,31],[[]],[31,25],[31,25],[25,25],[32,25],[32,25],[[],25],[41,25],[25,[[8,[32,38]]]],[25,[[8,[31,38]]]],[31],[25],[[]],[[]],0,[[31,31],[[4,[77]]]],[[25,25],[[4,[77]]]],[[31,12],[[8,[41,78]]]],[[25,12],[[8,[32,78]]]],0,[31,8],[25,8],[[31,31],[[8,[41,38]]]],[[25,25],[[8,[25,38]]]],[[31,41],[[8,[31,38]]]],[[]],[[]],[[],17],[[],17],[[],8],[25,[[8,[31,78]]]],[[],8],[[],8],[25,[[8,[31,78]]]],[[],8],[[],24],[[],24],[[]],[[]],[31],[[],3],[[32,32],32],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[79,70],[[8,[31,38]]]],[[79,70],[[8,[31,38]]]],[[79,70,[4,[25]]],[[8,[31,38]]]],[[]],[79,31],[79,31],[79,31],[[]],[[],8],[[],8],[[],24],[[]],0,[[80,[4,[32]]],[[8,[70,38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[7,29],30],[[7,29],30],[81,7],[82,7],[38,7],[78,7],[59,7],[[]],[83,7],[[]],[64],[7,[[4,[65]]]],[[],17],[[],8],[[],8],[[],24],[[]],0,0,0,[[]],[[]],[[66,66],3],[[],3],[[66,29],30],[[66,29],30],[[]],[66],[[]],[64],[[],17],[[],8],[[],8],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[15,15],3],[[15,29],30],[[15,29],30],[[]],[66,15],[38,15],[[]],[64],[15,[[4,[65]]]],[[],17],[[],8],[[],8],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[78,78],3],[[],3],[[78,29],30],[[78,29],30],[[]],[[]],[64],[[],17],[[],8],[[],8],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[81,81],3],[[],3],[[81,29],30],[[81,29],30],[78,81],[[]],[[]],[64],[81,[[4,[65]]]],[[],17],[[],8],[[],8],[[],24],[[]],0,0,0,0,0,0,[[]],[[]],[[82,82],3],[[],3],[[82,29],30],[[82,29],30],[78,82],[[]],[[]],[64],[82,[[4,[65]]]],[[],17],[[],8],[[],8],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[38,38],3],[[38,29],30],[[38,29],30],[81,38],[[]],[82,38],[66,38],[78,38],[[]],[64],[38,[[4,[65]]]],[[],17],[[],8],[[],8],[[],24],[[]],0,[[]],[[]],[[83,83],3],[[83,29],30],[[83,29],30],[[]],[[6,10,38],83],[[41,6,10],[[4,[17]]]],[[41,6,[4,[41]]],[[4,[47]]]],[[10,6],[[4,[17]]]],[[]],[64],[[],17],[[],8],[[],8],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[84,31],[[8,[78]]]],[[85,86],[[8,[81]]]],[[87,86],[[8,[81]]]],[[88,86],[[8,[81]]]],[[89,86],[[8,[81]]]],[[90,86],[[8,[81]]]],[[91,86],[[8,[81]]]],[[84,86],[[8,[81]]]],[[92,86],[[8,[81]]]],[84,37],[85,93],[87,93],[88,93],[89,93],[90,93],[91,93],[84,93],[92,93],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,85],[87,87],[88,88],[89,89],[90,90],[91,91],[84,84],[92,92],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[85,31,86],[[8,[[4,[25]],81]]]],[[87,31,86],[[8,[[4,[25]],81]]]],[[88,31,86],[[8,[[4,[25]],81]]]],[[89,31,86],[[8,[[4,[25]],81]]]],[[90,31,86],[[8,[[4,[25]],81]]]],[[91,31,86],[[8,[[4,[25]],81]]]],[[84,31,86],[[8,[[4,[25]],81]]]],[[92,31,86],[[8,[[4,[25]],81]]]],[[],90],[[85,10,31],[[8,[81]]]],[[87,10,31],[[8,[81]]]],[[88,10,31],[[8,[81]]]],[[89,10,31],[[8,[81]]]],[[90,10,31],[[8,[81]]]],[[91,10,31],[[8,[81]]]],[[84,10,31],[[8,[81]]]],[[92,10,31],[[8,[81]]]],[[85,29],30],[[87,29],30],[[88,29],30],[[89,29],30],[[90,29],30],[[91,29],30],[[84,29],30],[[92,29],30],[35,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,92],[[]],[89,92],[85,92],[87,92],[84,92],[91,92],[90,92],[[85,10],[[8,[41,78]]]],[[87,10],[[8,[41,78]]]],[[88,10],[[8,[41,78]]]],[[89,10],[[8,[41,78]]]],[[90,10],[[8,[41,78]]]],[[91,10],[[8,[41,78]]]],[[84,10],[[8,[41,78]]]],[[92,10],[[8,[41,78]]]],[[89,10],[[8,[[12,[31]],78]]]],[[92,10],[[8,[[12,[31]],78]]]],[85],[87],[88],[89],[90],[91],[84],[92],[[91,86],4],[[92,86],4],[[85,10],[[8,[41,78]]]],[[87,10],[[8,[41,78]]]],[[88,10],[[8,[41,78]]]],[[89,10],[[8,[41,78]]]],[[90,10],[[8,[41,78]]]],[[91,10],[[8,[41,78]]]],[[84,10],[[8,[41,78]]]],[[92,10],[[8,[41,78]]]],[[85,10],[[8,[78]]]],[[87,10],[[8,[78]]]],[[88,10],[[8,[78]]]],[[89,10],[[8,[78]]]],[[90,10],[[8,[78]]]],[[91,10],[[8,[78]]]],[[84,10],[[8,[78]]]],[[92,10],[[8,[78]]]],[[85,11,11],41],[[89,11],41],[[92,11,11],41],[[85,10],[[8,[41,78]]]],[[87,10],[[8,[41,78]]]],[[88,10],[[8,[41,78]]]],[[89,10],[[8,[41,78]]]],[[90,10],[[8,[41,78]]]],[[91,10],[[8,[41,78]]]],[[84,10],[[8,[41,78]]]],[[92,10],[[8,[41,78]]]],[[91,10],[[8,[41,78]]]],[[92,10],[[8,[41,78]]]],[85,[[12,[25]]]],[87,[[12,[25]]]],[88,[[12,[25]]]],[89,[[12,[25]]]],[90,[[12,[25]]]],[91,[[12,[25]]]],[84,[[12,[25]]]],[92,[[12,[25]]]],[[85,94,86]],[[87,94,86]],[[88,94,86]],[[89,94,86]],[[90,94,86]],[[91,94,86]],[[84,94,86]],[[92,94,86]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92,2],[[11,3],88],[3,90],[[11,11,3],91],[85,11],[87,11],[88,11],[89,11],[91,11],[84,11],[92,[[4,[11]]]],[[92,10],[[8,[38]]]],[[92,41]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[6,10],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[6,10],[[8,[38]]]],[[6,10],[[8,[38]]]],[[6,10],[[8,[38]]]],[[6,10],[[8,[38]]]],[95,95],[96,96],[97,97],[[]],[[]],[[]],[[],97],[[6,3,3,10,5],[[8,[38]]]],[[95,95],3],[[96,96],3],[[97,97],3],[[],3],[[],3],[[],3],0,[[6,10],[[8,[81]]]],[[95,29],30],[[96,29],30],[[97,29],30],[[]],[25,95],[[[12,[25]]],95],[[]],[[]],[[]],[[6,10],[[8,[12,81]]]],[6,13],[[6,10],[[8,[97,82]]]],[[6,13,5],[[8,[[13,[41,[12,[[21,[37]]]]]],38]]]],[6,[[4,[31]]]],[[6,10],[[8,[41,78]]]],[[6,10],[[8,[17,81]]]],[[6,10],[[8,[4,38]]]],[6,12],[6,[[13,[41,22]]]],0,[[6,10],[[8,[31,81]]]],[[6,10],[[8,[81]]]],[[6,10,41,[12,[25]],25],[[8,[31,81]]]],[[6,10],[[8,[81]]]],[[6,10,[4,[31]]]],[[6,10],[[8,[81]]]],[[]],[[]],[[]],[[]],0,0,[[58,2,3],[[8,[6,81]]]],0,[[6,10],[[8,[81]]]],[[6,10],[[8,[82]]]],0,0,[[6,41,10,5],[[8,[38]]]],[[6,41,3,10,5],[[8,[38]]]],[[6,10,5],[[8,[38]]]],[[6,31,10,5],[[8,[38]]]],[[6,41,10,5],[[8,[38]]]],[[6,[4,[2]]],[[8,[59]]]],0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[6,10,98],[[8,[81]]]],[[6,3,10],[[8,[38]]]],[86,[[8,[4,38]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[8,[99]]]],[[100,100],3],[[99,99],3],[[],3],[[],3],[[100,29],30],[[99,29],30],0,0,[[]],[[]],[[]],[[]],0,0,[[31,12],[[8,[41,82]]]],[99,8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[]],[[]],0,0,0,0,0,[10,31],[[10,31,31],[[8,[78]]]],[10,31],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,101],[102,102],[[]],[[]],[10,12],[[10,70],[[8,[38]]]],[[],101],[10],[[10,20],[[8,[38]]]],[[103,103],3],[[104,104],3],[[],3],[[],3],[[103,29],30],[[104,29],30],[[101,29],30],[[102,29],30],[[]],[[]],[[]],[[]],[[]],[[10,37],[[8,[25,38]]]],[10,31],[10,12],[10,12],[[10,25,41],[[8,[[12,[25]],78]]]],[10,31],[[10,31],[[8,[[33,[32]],38]]]],[[10,31,41],[[8,[[12,[[33,[32]]]],38]]]],[10,[[8,[[4,[25]],78]]]],[10,31],[[10,25,41],[[8,[[12,[[4,[[33,[25]]]]]],78]]]],[10,[[8,[91,38]]]],[[10,31],[[8,[31,38]]]],[[10,41],[[8,[[12,[25]],78]]]],[[10,41],[[4,[41]]]],[10,[[8,[84,38]]]],0,0,[[10,31,[34,[25]]],[[8,[38]]]],[[]],[[]],[[]],[[]],[[]],[[10,25,12],[[8,[25,78]]]],[[10,31,41],[[8,[38]]]],[3,10],[[2,[13,[17,41]],14],102],[[10,5,20,13,13],[[8,[38]]]],[[10,5,20,13,13],[[8,[38]]]],[10,[[8,[38]]]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[],24],[[],24],[[],24],[10,[[8,[38]]]],[[10,31,92],[[8,[38]]]],[[]],[[]],[[]],[[]],[[]],[[10,31,37],[[8,[25,78]]]],0,0,0,0,[[86,41,105]],[[]],[[]],[[]],[[]],0,[[],86],[[]],[[]],[[86,25,41],[[8,[[12,[25]],78]]]],[[86,31],[[8,[[33,[32]],38]]]],[[86,31,41],[[8,[[12,[[33,[32]]]],38]]]],[[86,25,41],[[8,[[12,[[4,[[33,[25]]]]]],78]]]],[[86,31],[[8,[31,38]]]],[86,[[8,[78]]]],[[86,31,[34,[25]]],[[8,[38]]]],[[]],[[]],[[],86],[86,[[8,[78]]]],0,[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[86,[[8,[78]]]],0,[[]],[[]],0,[[94,86],31],[[94,86],31],[[]],[[]],[[94,86],12],[[],94],[[94,94],3],[[],3],[[94,29],30],[[]],[[94,37,86],[[8,[25,38]]]],[[94,95,86],[[8,[25,38]]]],[[94,106],[[8,[41,78]]]],[[94,41],[[4,[41]]]],[[94,41],[[4,[41]]]],[[]],[[94,25],[[8,[3,78]]]],[[94,86,25,12],[[8,[25,78]]]],[[],94],0,0,0,[94,[[8,[[12,[41]],78]]]],0,0,[[],8],[[],8],[[],24],[[]],[[94,86,31,37],[[8,[25,78]]]]],"p":[[3,"Path"],[15,"str"],[15,"bool"],[4,"Option"],[8,"HintProcessor"],[3,"CairoRunner"],[4,"CairoRunError"],[4,"Result"],[6,"Result"],[3,"VirtualMachine"],[15,"u32"],[3,"Vec"],[3,"HashMap"],[3,"ApTracking"],[4,"HintError"],[3,"BuiltinHintProcessor"],[3,"String"],[3,"HintFunc"],[3,"Rc"],[3,"ExecutionScopes"],[3,"Box"],[3,"HintReference"],[3,"HintProcessorData"],[3,"TypeId"],[4,"MaybeRelocatable"],[3,"DictManager"],[3,"DictTracker"],[4,"Dictionary"],[3,"Formatter"],[6,"Result"],[3,"Relocatable"],[3,"Felt"],[4,"Cow"],[8,"Into"],[3,"BigInt"],[3,"BigUint"],[8,"Any"],[4,"VirtualMachineError"],[3,"Reference"],[15,"i32"],[15,"usize"],[3,"HintParams"],[3,"FlowTrackingData"],[3,"Identifier"],[3,"Member"],[3,"Attribute"],[3,"Location"],[3,"InstructionLocation"],[3,"InputFile"],[3,"HintLocation"],[3,"ReferenceManager"],[4,"OffsetValue"],[3,"ValueAddress"],[3,"ProgramJson"],[3,"DebugInfo"],[8,"Deserializer"],[8,"Read"],[3,"Program"],[4,"ProgramError"],[4,"ReferenceParseError"],[6,"IResult"],[3,"Error"],[3,"Error"],[3,"Demand"],[8,"Error"],[4,"ExecScopeError"],[8,"Clone"],[3,"RefCell"],[4,"Register"],[3,"Instruction"],[4,"Op1Addr"],[4,"Res"],[4,"PcUpdate"],[4,"ApUpdate"],[4,"FpUpdate"],[4,"Opcode"],[4,"Ordering"],[4,"MemoryError"],[3,"RunContext"],[15,"i64"],[4,"RunnerError"],[4,"TraceError"],[3,"VmException"],[3,"SignatureBuiltinRunner"],[3,"BitwiseBuiltinRunner"],[3,"Memory"],[3,"EcOpBuiltinRunner"],[3,"HashBuiltinRunner"],[3,"KeccakBuiltinRunner"],[3,"OutputBuiltinRunner"],[3,"RangeCheckBuiltinRunner"],[4,"BuiltinRunner"],[15,"isize"],[3,"MemorySegmentManager"],[4,"CairoArg"],[3,"SegmentInfo"],[3,"ExecutionResources"],[8,"Write"],[3,"RelocatedTraceEntry"],[3,"TraceEntry"],[3,"DeducedOperands"],[3,"HintData"],[3,"Operands"],[3,"OperandsAddresses"],[3,"ValidationRule"],[8,"Iterator"],[13,"DefaultDictionary"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
